{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","getRandomInt","min","max","Math","ceil","floor","random","n1","n2","React","useState","localStorage","getItem","parseInt","setItem","pontos","setPontos","difficult","setDificult","num1","num2","id","class","onClick","document","location","reload","type","name","placeholder","result","getElementById","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"sOA2HeA,MAtHf,WACE,SAASC,EAAaC,EAAKC,GAGzB,OAFAD,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GACVC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAMD,IAAQA,EAJtC,IAqBTM,EACAC,EAtBS,EAQeC,IAAMC,SAChCC,aAAaC,QAAQ,UACjBC,SAASF,aAAaC,QAAQ,WAC9BD,aAAaG,QAAQ,SAAU,IAXxB,mBAQNC,EARM,KAQEC,EARF,OAeoBP,IAAMC,SACrCC,aAAaC,QAAQ,aACjBC,SAASF,aAAaC,QAAQ,cAC9BD,aAAaG,QAAQ,YAAa,IAlB3B,mBAeNG,EAfM,KAeKC,EAfL,KAwBI,GAAbD,GACFV,EAAKP,EAAa,EAAG,IACrBQ,EAAKR,EAAa,EAAG,MAErBO,EAAKP,EAAa,EAAG,IACrBQ,EAAKR,EAAa,EAAG,KA7BV,MAiCWS,IAAMC,SAASH,GAjC1B,mBAiCNY,EAjCM,aAkCWV,IAAMC,SAASF,IAlC1B,mBAkCNY,EAlCM,KA+Eb,OA/Ea,KA8DbT,aAAaG,QAAQ,YAAaG,GAelCN,aAAaG,QAAQ,SAAUC,GAG7B,sBAAKM,GAAG,OAAR,UACE,wBAAQC,MAAM,YAAYC,QA9B9B,WAEmB,GAAbN,GACFC,EAAY,GACZM,SAASC,SAASC,QAAO,IAEH,GAAbT,IACTC,EAAY,GACZM,SAASC,SAASC,QAAO,KAsBzB,SAGiB,GAAbT,EAAiB,WAAU,aAI/B,oBAAIK,MAAM,WAAV,SAAsBH,IACtB,mCACA,oBAAIG,MAAM,WAAV,SAAsBF,IACtB,oBAAIC,GAAG,YACP,iCACE,uBACEM,KAAK,SACLC,KAAK,SACLP,GAAG,SACHQ,YAAY,cACX,IACH,uBACA,uBAAOF,KAAK,SAASJ,QApC3B,WAEE,IAAIO,EAASN,SAASO,eAAe,UAAUC,MAC/CF,EAASjB,SAASiB,GAClBd,EAAUH,SAASE,IAGjBC,EADEc,GAAUX,EAAOC,EACTL,EAAS,EAETA,EAAS,IA2BqBO,MAAM,cAG9C,yCACA,6BAAKP,IAEL,wBACEQ,QAAS,WACPZ,aAAaG,QAAQ,SAAU,GAC/BH,aAAaG,QAAQ,YAAa,IAHtC,uBCnGSmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpB,SAASO,eAAe,SAM1BE,M","file":"static/js/main.c5d326bd.chunk.js","sourcesContent":["import React from 'react';\n// eslint-disable-next-line\nimport ReactDOM from 'react-dom';\nimport './App.css';\n\nfunction App() {\n  function getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  //Variável de pontuação\n  const [pontos, setPontos] = React.useState(\n    localStorage.getItem('pontos')\n      ? parseInt(localStorage.getItem('pontos'))\n      : localStorage.setItem('pontos', 0),\n  );\n\n  //Variável de Dificuldade\n  const [difficult, setDificult] = React.useState(\n    localStorage.getItem('difficult')\n      ? parseInt(localStorage.getItem('difficult'))\n      : localStorage.setItem('difficult', 0),\n  );\n\n  let n1;\n  let n2;\n  // eslint-disable-next-line\n  if (difficult == 1) {\n    n1 = getRandomInt(2, 10);\n    n2 = getRandomInt(2, 10);\n  } else {\n    n1 = getRandomInt(3, 20);\n    n2 = getRandomInt(3, 20);\n  }\n\n  //Variáveis das contas\n  const [num1, setNum1] = React.useState(n1);\n  const [num2, setNum2] = React.useState(n2);\n\n  //Limpador de input\n  //var ivalue = '';\n\n  // Função que troca os números\n  // function trocaNum() {\n  //   eslint-disable-next-line\n  //   if (difficult == 1) {\n  //     setNum1(getRandomInt(2, 10));\n  //     setNum2(getRandomInt(2, 10));\n  //   } else {\n  //     setNum1(getRandomInt(3, 20));\n  //     setNum2(getRandomInt(3, 20));\n  //   }\n  // }\n\n  function trocaDificuldade() {\n    // eslint-disable-next-line\n    if (difficult == 0) {\n      setDificult(1);\n      document.location.reload(true);\n      // eslint-disable-next-line\n    } else if (difficult == 1) {\n      setDificult(0);\n      document.location.reload(true);\n    }\n  }\n  localStorage.setItem('difficult', difficult);\n\n  function verify() {\n    //Variável de Resultado\n    var result = document.getElementById('result').value;\n    result = parseInt(result);\n    setPontos(parseInt(pontos));\n    // eslint-disable-next-line\n    if (result == num1 * num2) {\n      setPontos(pontos + 1);\n    } else {\n      setPontos(pontos - 1);\n    }\n  }\n\n  localStorage.setItem('pontos', pontos);\n\n  return (\n    <div id=\"main\">\n      <button class=\"difficult\" onClick={trocaDificuldade}>\n        {\n          // eslint-disable-next-line\n          difficult == 1 ? 'Fácil' : 'Médio'\n        }\n      </button>\n\n      <h1 class=\"num num1\">{num1}</h1>\n      <h2>x</h2>\n      <h1 class=\"num num2\">{num2}</h1>\n      <hr id=\"divisor\" />\n      <form>\n        <input\n          type=\"number\"\n          name=\"result\"\n          id=\"result\"\n          placeholder=\"resultado\"\n        />{' '}\n        <br />\n        <input type=\"submit\" onClick={verify} class=\"enviar\" />\n      </form>\n\n      <h2>Pontos:</h2>\n      <h1>{pontos}</h1>\n\n      <button\n        onClick={() => {\n          localStorage.setItem('pontos', 0);\n          localStorage.setItem('difficult', 0);\n        }}\n      >\n        Debug\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}